CREATE DATABASE UKACCIDENT;

USE UKACCIDENT;

CREATE TABLE ACCIDENTS(
ACCIDENT_INDEX VARCHAR(100),
LOCATION_EASTING_OSGR VARCHAR(100),
LOCATION_NORTHING_OSGR VARCHAR(100),
LONGITUDE VARCHAR(100),
LATITUDE VARCHAR(100),
POLICE_FORCE VARCHAR(100),
ACCIDENT_SEVERITY VARCHAR(100),
NUMBER_OF_VEHICLES VARCHAR(100),
NUMBER_OF_CASUALTIES VARCHAR(100),
DATE VARCHAR(100),
DAY_OF_WEEK VARCHAR(100),
TIME VARCHAR(100),	
LOCAL_AUTHORITY_DISTRICT VARCHAR(100),	
LOCAL_AUTHORITY_HIGHWAY VARCHAR(100),
1ST_ROAD_CLASS VARCHAR(100),
1ST_ROAD_NUMBER VARCHAR(100), 
ROAD_TYPE VARCHAR(100),
SPEED_LIMIT VARCHAR(100),
JUNCTION_DETAIL VARCHAR(100),
JUNCTION_CONTROL VARCHAR(100),	
2ND_ROAD_CLASS VARCHAR(100),
2ND_ROAD_NUMBER	VARCHAR(100),
PEDESTRIAN_CROSSING_HUMAN_CONTROL VARCHAR(100),
PEDESTRIAN_CROSSING_PHYSICAL_FACILITIES VARCHAR(100),
LIGHT_CONDITIONS VARCHAR(100),
WEATHER_CONDITIONS VARCHAR(100),
ROAD_SURFACE_CONDITIONS	VARCHAR(100),
SPECIAL_CONDITIONS_AT_SITE VARCHAR(100),
CARRIAGEWAY_HAZARDS	VARCHAR(100),
URBAN_OR_RURAL_AREA	VARCHAR(100),
DID_POLICE_OFFICER_ATTEND_SCENE_OF_ACCIDENT	VARCHAR(100),
LSOA_OF_ACCIDENT_LOCATION VARCHAR(100),
PRIMARY KEY(ACCIDENT_INDEX)
);

LOAD DATA INFILE
'D:/ACCIDENTS.csv'
INTO TABLE ACCIDENTS
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;

SELECT * FROM ACCIDENTS;

CREATE TABLE VEHICLE_TYPES(
CODE VARCHAR (30),	
LABEL VARCHAR (100)
);

LOAD DATA INFILE
'D:/VEHICLE_TYPES.csv'
INTO TABLE ACCIDENTS
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;

SELECT * FROM VEHICLE_TYPES;

CREATE TABLE VEHICLES(
ACCIDENT_INDEX VARCHAR(100),
VEHICLE_REFERENCE VARCHAR(100),
VEHICLE_TYPE VARCHAR(100),	
TOWING_AND_ARTICULATION VARCHAR(100),	
VEHICLE_MANOEUVRE VARCHAR(100),
VEHICLE_LOCATION_RESTRICTED_LANE VARCHAR(100),	
JUNCTION_LOCATION VARCHAR(100),
SKIDDING_AND_OVERTURNING VARCHAR(100),	
HIT_OBJECT_IN_CARRIAGEWAY VARCHAR(100),
VEHICLE_LEAVING_CARRIAGEWAY VARCHAR(100),
HIT_OBJECT_OFF_CARRIAGEWAY VARCHAR(100),
1ST_POINT_OF_IMPACT VARCHAR(100),
WAS_VEHICLE_LEFT_HAND_DRIVE	VARCHAR(100),
JOURNEY_PURPOSE_OF_DRIVER VARCHAR(100),
SEX_OF_DRIVER VARCHAR(100),
AGE_OF_DRIVER VARCHAR(100),
AGE_BAND_OF_DRIVER VARCHAR(100),
ENGINE_CAPACITY_CC VARCHAR(100),
PROPULSION_CODE VARCHAR(100),
AGE_OF_VEHICLE VARCHAR(100),
DRIVER_IMD_DECILE VARCHAR(100),
DRIVER_HOME_AREA_TYPE VARCHAR(100),
VEHICLE_IMD_DECILE VARCHAR(100),
PRIMARY KEY(ACCIDENT_INDEX)
);

SET SESSION SQL_MODE = '';

LOAD DATA INFILE
'D:\VEHICLES.csv'
INTO TABLE VEHICLES
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;

SELECT * FROM VEHICLES;

## Business Problem ##

/*The UK Department of Transport provides open datasets on road safety and casualties, and one can 
use these datasets to analyze how safe the roads in the UK are. 
This project will help you answer a few questions using their 2015 dataset.*/

# The dataset has 3 tables i.e Accident, vehicle, Vehicle_type #

## Approach/Project Idea ##

# Use aggregate functions in SQL and Python to answer the following sample questions. #

#1. Evaluate the median severity value of accidents caused by various Motorcycles.

SELECT 'VEHICLE TYPE',
SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(ACCIDENT_SEVERITY ORDER BY ACCIDENT_SEVERITY), ',', COUNT(*) / 2 + 1), ',', -1)  
AS MEDIAN_SEVERITY 
FROM ACCIDENTS 
WHERE 'VEHICLE TYPE' 
LIKE '%MOTORCYCLE%' 
GROUP BY 'VEHICLE TYPE' 
ORDER BY MEDIAN_SEVERITY;

#2. Evaluate Accident Severity and Total Accidents per Vehicle Type.

SELECT VT.LABEL AS 'VEHICLE TYPE', SUM(A.ACCIDENT_SEVERITY) AS 'TOTAL SEVERITY', COUNT(A.ACCIDENT_INDEX) AS 'TOTAL ACCIDENTS'
FROM ACCIDENTS A 
JOIN VEHICLES V ON A.ACCIDENT_INDEX = V.ACCIDENT_INDEX
JOIN VEHICLE_TYPES VT ON V.VEHICLE_TYPE = VT.`CODE`
GROUP BY LABEL; 

#3. Calculate the Average Severity by vehicle type.

SELECT VT.LABEL AS 'VEHICLE TYPE', AVG(A.ACCIDENT_SEVERITY) AS 'ACCIDENT SEVERITY'
FROM ACCIDENTS A 
JOIN VEHICLES V ON A.ACCIDENT_INDEX = V.ACCIDENT_INDEX
JOIN VEHICLE_TYPES VT ON V.VEHICLE_TYPE = VT.`CODE`
GROUP BY LABEL; 

#4. Calculate the Average Severity and Total Accidents by Motorcycle.

SELECT VT.LABEL AS 'VEHICLE TYPE', AVG(A.ACCIDENT_SEVERITY) AS 'AVERAGE SEVERITY', COUNT(LABEL) AS 'NUMBER OF ACCIDENTS'
FROM ACCIDENTS A
JOIN VEHICLES V ON A.ACCIDENT_INDEX = V.ACCIDENT_INDEX
JOIN VEHICLE_TYPES VT ON V.VEHICLE_TYPE = VT.`CODE`
WHERE VT.LABEL LIKE '%Motorcycle%'
GROUP BY 1
ORDER BY 2,3;
